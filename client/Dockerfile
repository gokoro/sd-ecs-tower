FROM node:20-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

FROM base AS deps
RUN apk add --no-cache libc6-compat
RUN corepack enable

WORKDIR /app

COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

FROM base AS builder

ENV NEXT_TELEMETRY_DISABLED 1

ENV NEXT_PUBLIC_TOWER_ENDPOINT=/tower/api

WORKDIR /app

COPY . .
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# Should be removed in the future
RUN --mount=type=secret,id=SERVER_SIDE_TOWER_ENDPOINT \
  # SERVER_SIDE_TOWER_ENDPOINT=$(cat /run/secrets/SERVER_SIDE_TOWER_ENDPOINT) \
  cat /run/secrets/SERVER_SIDE_TOWER_ENDPOINT > .env \
  pnpm build

FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Temporal disabled
# COPY --from=builder /app/public ./public

RUN mkdir .next
RUN chown nextjs:nodejs .next

COPY --from=deps /app/node_modules /app/node_modules
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000


CMD ["node", "server.js"]
# CMD ["pnpm", "start"]
