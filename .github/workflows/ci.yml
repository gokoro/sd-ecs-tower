name: Publish a Docker image and deploy

on:
  push:
    # branches: ['main']

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: ${{ github.repository_owner }}/tower

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        package: ['attached', 'monitor', 'client']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if code is changed
        uses: technote-space/get-diff-action@v6
        id: git-diff
        with:
          PATTERNS: |
            ${{ matrix.package }}/**/*
            .github/workflows/ci.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: steps.git-diff.outputs.diff

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: steps.git-diff.outputs.diff
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        if: steps.git-diff.outputs.diff
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.package }}
          flavor: latest=true
          tags: type=sha

      - name: Build and push Docker image (common)
        uses: docker/build-push-action@v4
        if: ${{ steps.git-diff.outputs.diff && matrix.package != 'monitor' }}
        with:
          context: '{{defaultContext}}:${{ matrix.package }}'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # secrets: |
          #   "SERVER_SIDE_TOWER_ENDPOINT=${{ secrets.SERVER_SIDE_TOWER_ENDPOINT }}"

      - name: Build and push Docker image (for monitor)
        uses: docker/build-push-action@v4
        if: ${{ steps.git-diff.outputs.diff && matrix.package == 'monitor' }}
        with:
          file: ${{ matrix.package }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
